cmake_minimum_required(VERSION 2.8.3)


find_package(OpenCV 3 REQUIRED)
set( CMAKE_CXX_STANDARD 11 )
find_package(Eigen3 REQUIRED)

find_package(Ceres REQUIRED)
#find_package(Boost REQUIRED system filesystem program_options )
FIND_PACKAGE(Boost COMPONENTS system program_options filesystem REQUIRED)
INCLUDE_DIRECTORIES(${Boost_INCLUDE_DIRS})


include_directories(
  ${OpenCV_INCLUDE_DIRS}
  ${EIGEN3_INCLUDE_DIRS}
  ${CERES_INCLUDE_DIRS}
  utils
)



FILE(GLOB KuseUtilSources
            utils/MiscUtils.cpp
            utils/RawFileIO.cpp
            utils/PoseManipUtils.cpp
            PinholeCamera.cpp
    )


include_directories(utils/camodocal/include)
FILE(GLOB CamodocalCameraModelSources
        utils/camodocal/src/chessboard/Chessboard.cc
        utils/camodocal/src/calib/CameraCalibration.cc
        utils/camodocal/src/calib/StereoCameraCalibration.cc
        utils/camodocal/src/camera_models/Camera.cc
        utils/camodocal/src/camera_models/CameraFactory.cc
        utils/camodocal/src/camera_models/CostFunctionFactory.cc
        utils/camodocal/src/camera_models/PinholeCamera.cc
        utils/camodocal/src/camera_models/CataCamera.cc
        utils/camodocal/src/camera_models/EquidistantCamera.cc
        utils/camodocal/src/camera_models/ScaramuzzaCamera.cc
        utils/camodocal/src/sparse_graph/Transform.cc
        utils/camodocal/src/gpl/gpl.cc
        utils/camodocal/src/gpl/EigenQuaternionParameterization.cc
    )

#add_executable( chkFile
#                src_geometry/chkFile.cpp
#                ${KuseUtilSources}
#                )

#add_executable( projection_test
#                src_geometry/projection_test.cpp
#                ${KuseUtilSources}
#                )

add_executable( intrinsic_calib
                utils/camodocal/src/intrinsic_calib.cc
                ${CamodocalCameraModelSources}
                )

add_executable( stereo_calib
                utils/camodocal/src/stereo_calib.cc
                ${CamodocalCameraModelSources}
                )
#target_link_libraries( chkFile  ${OpenCV_LIBRARIES} )
#target_link_libraries( projection_test  ${OpenCV_LIBRARIES} )
target_link_libraries( intrinsic_calib
  ${Boost_FILESYSTEM_LIBRARY}
  ${Boost_PROGRAM_OPTIONS_LIBRARY}
  ${Boost_SYSTEM_LIBRARY}
  ${OpenCV_LIBRARIES} ${CERES_LIBRARIES} )

  target_link_libraries( stereo_calib
    ${Boost_FILESYSTEM_LIBRARY}
    ${Boost_PROGRAM_OPTIONS_LIBRARY}
    ${Boost_SYSTEM_LIBRARY}
    ${OpenCV_LIBRARIES} ${CERES_LIBRARIES} )
